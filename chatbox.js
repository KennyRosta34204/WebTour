// L·∫•y c√°c ph·∫ßn t·ª≠ DOM
const chatbotToggler = document.querySelector(".chatbot-toggler");
const closeBtn = document.querySelector(".close-btn");
const chatBox = document.getElementById("chatBox");
const chatInput = document.getElementById("chatInput");
const sendBtn = document.getElementById("send-btn");

// T·∫£i l·ªãch s·ª≠ tr√≤ chuy·ªán khi trang ƒë∆∞·ª£c t·∫£i
document.addEventListener('DOMContentLoaded', () => {
    loadChatHistory();
});

// M·ªü/ƒë√≥ng chatbox
chatbotToggler.addEventListener("click", () => {
    document.body.classList.toggle("show-chatbot");
});

closeBtn.addEventListener("click", () => {
    document.body.classList.remove("show-chatbot");
});

// G·ª≠i tin nh·∫Øn khi nh·∫•n n√∫t "Send" ho·∫∑c Enter
sendBtn.addEventListener("click", handleChat);

chatInput.addEventListener("keypress", (event) => {
    if (event.key === "Enter" && !event.shiftKey) {
        event.preventDefault();
        handleChat();
    }
});

// H√†m x·ª≠ l√Ω g·ª≠i tin nh·∫Øn
function handleChat() {
    const messageText = chatInput.value.trim();
    if (!messageText) return;

    // Hi·ªÉn th·ªã tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng
    const userMessage = document.createElement("li");
    userMessage.classList.add("chat", "outgoing");
    userMessage.innerHTML = `<p>${messageText}</p>`;
    chatBox.appendChild(userMessage);

    // L∆∞u tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng
    saveMessage("outgoing", messageText);

    // Gi·∫£ l·∫≠p ph·∫£n h·ªìi t·ª´ bot
    setTimeout(() => {
        const botMessageText = `Hi! T√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn c·ªßa b·∫°n: "${messageText}". B·∫°n c·∫ßn gi√∫p g√¨ n·ªØa kh√¥ng?`;
        const botMessage = document.createElement("li");
        botMessage.classList.add("chat", "incoming");
        botMessage.innerHTML = `<span class="material-symbols-outlined">smart_toy</span><p>${botMessageText}</p>`;
        chatBox.appendChild(botMessage);

        // L∆∞u tin nh·∫Øn c·ªßa bot
        saveMessage("incoming", botMessageText);
        
        // Cu·ªôn xu·ªëng cu·ªëi chatbox
        chatBox.scrollTop = chatBox.scrollHeight;
    }, 500);

    // X√≥a input sau khi g·ª≠i
    chatInput.value = '';

    // Cu·ªôn xu·ªëng cu·ªëi chatbox
    chatBox.scrollTop = chatBox.scrollHeight;
}

// H√†m l∆∞u tin nh·∫Øn v√†o localStorage
function saveMessage(sender, text) {
    const chatHistory = JSON.parse(localStorage.getItem('chatHistory')) || [];
    chatHistory.push({ sender, text });
    localStorage.setItem('chatHistory', JSON.stringify(chatHistory));
}

// H√†m t·∫£i l·ªãch s·ª≠ tr√≤ chuy·ªán t·ª´ localStorage
function loadChatHistory() {
    const chatHistory = JSON.parse(localStorage.getItem('chatHistory')) || [];

    // X√≥a n·ªôi dung hi·ªán t·∫°i c·ªßa chatbox (tr·ª´ tin nh·∫Øn ch√†o m·∫∑c ƒë·ªãnh)
    chatBox.innerHTML = `
        <li class="chat incoming">
            <span class="material-symbols-outlined">smart_toy</span>
            <p>Hi there üëã<br>How can I help you today?</p>
        </li>
    `;

    // Th√™m c√°c tin nh·∫Øn t·ª´ l·ªãch s·ª≠
    chatHistory.forEach(message => {
        const messageLi = document.createElement("li");
        messageLi.classList.add("chat", message.sender);
        if (message.sender === "incoming") {
            messageLi.innerHTML = `<span class="material-symbols-outlined">smart_toy</span><p>${message.text}</p>`;
        } else {
            messageLi.innerHTML = `<p>${message.text}</p>`;
        }
        chatBox.appendChild(messageLi);
    });

    // Cu·ªôn xu·ªëng cu·ªëi chatbox
    chatBox.scrollTop = chatBox.scrollHeight;
}
